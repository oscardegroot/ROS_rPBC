ID: 0
sampling_rate: 1000
joint_names:
- panda_joint1
- panda_joint2
- panda_joint3
- panda_joint4
- panda_joint5
- panda_joint6
- panda_joint7
arm_id: panda
vel_max: 0.05
z_select: [1, 1, 2, 0, 0, 0]
safety:
  lower_bound_z: 0.2
  camera_bound:
    z: 0.9
    x: -0.5 
  torque_bound_stop: 200.0
velocity_element_bound: 2.0
velocity_norm_bound: 0.3
torque_bound: 16.0 #12.0
alpha: 0.95
initial_pause: 0.0
NF:
  alpha: 35
  gamma:
    r_w: 1.5
    eps: 0.005 #0.17
  beta:
    function:
      R: 0.1
      delta: 0.05

      obstacle_0:
        type: obstacle
        radius: 0.1
        location:
          - 0.0
          - 0.0
          - 0.45
controller:
  publish_rate: 100
  # kq: 1.0
  # kz: 3.0
  gravity_compensation:
    enabled: false
  local_potential:
    enabled: false
    gains: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    goals: [0.0, 0.2, 0.0, 0.15, 0.0, 0.0, 0.0]
  joint_limit_avoidance:
    enabled: true 
    gains: [0.5, 2.5, 0.5, 0.5, 0.5, 0.5, 0.5] #Scale by nullPsi norm?
    limits_min: [-2.8973, -1.7628, -2.8973, -3.0718, -2.8973, -0.0175, -2.8973]
    limits_max: [2.8973, 1.7628, 2.8973, -0.0698, 2.8973, 3.7525, 2.8973]
    
        # I should implement a torque bound... Close contact with obstacles creates high torques
        # It is also likely that the iteration strategy in divergent at these points 


# Specify here the obstacles, format:
# z_bound_N with N = 1, 2, .... each bound increasing count